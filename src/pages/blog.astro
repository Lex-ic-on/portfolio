---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import HeroTier2 from '../components/HeroTier2.astro';
import ThumbBlog from '../components/ThumbBlog.astro';

const EXCERPT_LENGTH = 160;
const EXCERPT_SUFFIX = '……';

const allBlogPosts = await getCollection('blog');
const sortedPosts = allBlogPosts
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const toPlainText = (markdown: string) => markdown
  .replace(/```[\s\S]*?```/g, ' ')
  .replace(/`([^`]+)`/g, '$1')
  .replace(/!\[([^\]]*)\]\([^\)]+\)/g, '$1')
  .replace(/\[([^\]]+)\]\([^\)]+\)/g, '$1')
  .replace(/\[([^\]]+)\]\[[^\]]*\]/g, '$1')
  .replace(/^>\s?/gm, '')
  .replace(/^#{1,6}\s+/gm, '')
  .replace(/^\s*[-*+]\s+/gm, '')
  .replace(/\r?\n/g, ' ')
  .replace(/\s+/g, ' ')
  .trim();

const createExcerpt = (postBody: string) => {
  const plainText = toPlainText(postBody);
  if (!plainText) {
    return '';
  }

  const characters = Array.from(plainText);
  if (characters.length <= EXCERPT_LENGTH) {
    return plainText;
  }

  return `${characters.slice(0, EXCERPT_LENGTH).join('')}${EXCERPT_SUFFIX}`;
};

const getDescription = (post: (typeof sortedPosts)[number]) => {
  const description = post.data.description?.trim();
  if (description) {
    return description;
  }

  return createExcerpt(post.body);
};
---

<Layout title="Blog - Lex portfolio website">
  <Header />
  <main class="main">
    <HeroTier2
      dir="1ex.me/Blog"
      title="Blog"
    />
    <ul class="blog-list">
      {sortedPosts.map((post) => (
        <li>
          <ThumbBlog
            url={`/blog/${post.slug}`}
            date={post.data.date.toLocaleDateString('ja-JP')}
            title={post.data.title}
            description={getDescription(post)}
          />
        </li>
      ))}
    </ul>
  </main>
  <Footer />
</Layout>

<style>
  .main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    min-height: calc(100dvh - var(--header-height));
    padding-top: var(--header-height);
  }

  .blog-list {
    margin-left: auto;
    margin-right: auto;
    margin-top: var(--scale-m);
    display: flex;
    flex-direction: column;
    gap: var(--scale-m);
    max-width: calc(60 * var(--scale-t-s) + 5dvw);
  }
</style>
