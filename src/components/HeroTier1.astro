---
export interface Props {
  dir?: string;
  title: string;
  stats: string;
}

const { dir: dirProp, title, stats } = Astro.props;

const siteUrl = Astro.site
  ? Astro.site instanceof URL
    ? Astro.site
    : new URL(Astro.site)
  : undefined;
const fallbackUrl = !Astro.url && siteUrl ? siteUrl : undefined;
const url = Astro.url ?? fallbackUrl;
const host = siteUrl?.host || url?.host || '';
const segments = url?.pathname.split('/').filter(Boolean) ?? [];
const formattedSegments = segments.map((segment, index) =>
  index === 0 ? segment.charAt(0).toUpperCase() + segment.slice(1) : segment
);

const derivedDir = host
  ? [host, ...formattedSegments].join('/')
  : formattedSegments.length
    ? `/${formattedSegments.join('/')}`
    : '/';

const dir = dirProp ?? derivedDir;
---

<div class="hero">
  <h5 class="dir">{dir}</h5>
  <h1 class="page-title">{title}</h1>
  <p>{stats}</p>
</div>

<style>
  .hero {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;

    margin-top: calc(-1 * var(--scale-t-m));
    margin-right: calc(10 * var(--scale-t-s) + 2.5dvw);

    padding-left: 1.25dvw;
  }

  .page-title {
    line-height: 100%;
  }

  .dir {
    font-style: italic;
  }
</style>
